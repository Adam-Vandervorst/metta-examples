# Greet-words definition
(@greet-word :amr-set hi)
(@greet-word :amr-set hey)
(@greet-word :amr-set hello)
# Time-of-day definitions
(@time-of-day :amr-set morning)
(@time-of-day :amr-set afternoon)
(@time-of-day :amr-set evening)
(@time-of-day :amr-set night)

# Howdy (Do not use for generation)
(@greeting :amr-set (howdy :mode (expressive / -)))
# hi (Small caps needs unique AMR graph)
(@greeting-c :amr-set (say :ARG0 i :ARG1 hi))
# @greet-word[!]
(@greeting-c :amr-set (@greet-word :mode? (expressive / -)))
# Hello (alternative AMR graph)
(@greeting :amr-set (say :ARG1 @greet-word :ARG2 you))
# @greet-word there
(@greeting-c :amr-set (say :ARG1 @greet-word :ARG2 there))
# @greet-word there!
(@greeting-c :amr-set (@greet-word :mode (expressive / -) :location there))
# @greet-word $person-name
(@greeting-name-c :amr-set (say :* * :ARG1 (@greet-word :* *) :ARG2 (person :name $person-name)))

# Good @time-of-day
(@greeting-time-c :amr-set (t / @time-of-day :ARG1-of good))
# Good @time-of-day, $person-name.
(@greeting-time-c :amr-set (say :ARG0 i :ARG1 (t / @time-of-day :ARG1-of good)
                              :ARG2 (person :name $person-name)))
(@greeting-name-time-c :amr-set (say-01 :ARG0 i :ARG1 (t / $time-of-day :ARG1-of good-02)
                                   :ARG2 (person :name $person-name)))

#Hey, Grace
(@greeting-Grace :amr-set (say
    :* *
    :ARG1 (@greet-word :* *)
    :ARG2 (person
        :name (name
            :op1 "Grace"))))

# Long time no see
# TODO: How to generate "Long time no see"?
(@time-nosee :amr-set (see :polarity - :time (time :ARG1-of long)))
(@greeting :amr-set @time-nosee)

(@greeting :amr-set @greeting-c)
(@greeting :amr-set @greeting-name-c)
(@greeting :amr-set @greeting-time-c)

(@greeting-noname :amr-set @greeting-c)
(@greeting-noname :amr-set (t / $time-of-day :ARG1-of good-02))
(@greeting-g :amr-set @greeting-noname)
(@greeting-g :amr-set @greeting-name-c)
(@greeting-g :amr-set @greeting-name-time-c)
